/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package CapaPresentacion;

import CapaDatos.CategoriaDAO;
import CapaDatos.ProductoDAO;
import CapaEntidad.Categoria;
import CapaEntidad.Producto;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class jifProducto extends javax.swing.JInternalFrame {

    /**
     * Creates new form jmiProducto
     */
    public jifProducto() {
        initComponents();
        listarProductos();
        cargarCategorias();
        setClosable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void listarProductos() {
            try {
                ProductoDAO dao = new ProductoDAO();
                List<Producto> lista = dao.listarTodos();
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("ID");
                model.addColumn("Nombre");
                model.addColumn("Descripción");
                model.addColumn("Precio Compra");
                model.addColumn("Precio Venta");
                model.addColumn("Stock");
                model.addColumn("Vencimiento");
                model.addColumn("Categoría");

                for (Producto p : lista) {
                    model.addRow(new Object[]{
                            p.getIdProducto(),
                            p.getNombre(),
                            p.getDescripcion(),
                            p.getPrecioCompra(),
                            p.getPrecioVenta(),
                            p.getStock(),
                            p.getFechaVencimiento(),
                            p.getNombreCat() // solo si tienes ese campo en Producto
                    });
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error al listar: " + ex.getMessage());
            }
        }


    private void registrarProducto() {
        try {
            String nombre = jtfNombreProducto.getText().trim();
            String descripcion = jtfDesc.getText().trim();
            double precioCompra = Double.parseDouble(jtfPrecioCompra.getText().trim());
            double precioVenta = Double.parseDouble(jtfPrecioVenta.getText().trim());
            int stock = Integer.parseInt(jtfStock.getText().trim());



            // Fecha vencimiento opcional
            String fechaTexto = jtfFechaV.getText().trim();
            LocalDate fechaVencimiento = null;
            if (!fechaTexto.isEmpty()) {
                fechaVencimiento = LocalDate.parse(fechaTexto); // formato yyyy-MM-dd
            }

            // Obtener idCategoria desde el combo
            String categoriaCombo = (String) jcCategoria.getSelectedItem();
            String idCategoria = categoriaCombo.split(" - ")[0];  // solo el ID

            Producto p = new Producto(
                idCategoria,
                "",      // nombreCat
                "",      // idProducto generado por la BD
                nombre,
                descripcion,
                precioVenta,   // ✔ primero venta
                precioCompra,  // ✔ luego compra
                stock,
                fechaVencimiento
            );



            ProductoDAO dao = new ProductoDAO();
            dao.insertar(p);

            JOptionPane.showMessageDialog(this, "✅ Producto registrado correctamente");
            listarProductos(); // Refresca la tabla

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "❌ Error en valores numéricos: " + e.getMessage());
        } catch (java.time.format.DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "❌ Fecha inválida. Usa formato yyyy-MM-dd");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Error al registrar: " + e.getMessage());
        }
    }

            
    private void cargarCategorias() {
        try {
            CategoriaDAO dao = new CategoriaDAO();
            List<Categoria> lista = dao.listarTodos();

            jcCategoria.removeAllItems();  // limpia el combo

            for (Categoria c : lista) {
                String item = c.getIdCategoria() + " - " + c.getNombreCat();
                jcCategoria.addItem(item);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar categorías: " + e.getMessage());
        }
}
            

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfNombreProducto = new javax.swing.JTextField();
        jtfDesc = new javax.swing.JTextField();
        jtfStock = new javax.swing.JTextField();
        jtfPrecioVenta = new javax.swing.JTextField();
        jtfFechaV = new javax.swing.JTextField();
        jbRegistrar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jtfPrecioCompra = new javax.swing.JTextField();
        jcCategoria = new javax.swing.JComboBox<>();

        jLabel1.setText("Nombre");

        jLabel2.setText("Descripcion");

        jLabel3.setText("Precio Venta");

        jLabel4.setText("Precio Compra");

        jLabel5.setText("Fecha Venc.");

        jLabel6.setText("Categoria");

        jbRegistrar.setText("Registrar");
        jbRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRegistrarActionPerformed(evt);
            }
        });

        jLabel7.setText("Stock");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(jtfDesc)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                            .addComponent(jtfStock, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfPrecioCompra))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jcCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(22, 22, 22)
                            .addComponent(jtfPrecioVenta)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jtfFechaV, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jbRegistrar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfFechaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbRegistrar)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRegistrarActionPerformed
        // TODO add your handling code here:
        registrarProducto();
    }//GEN-LAST:event_jbRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbRegistrar;
    private javax.swing.JComboBox<String> jcCategoria;
    private javax.swing.JTextField jtfDesc;
    private javax.swing.JTextField jtfFechaV;
    private javax.swing.JTextField jtfNombreProducto;
    private javax.swing.JTextField jtfPrecioCompra;
    private javax.swing.JTextField jtfPrecioVenta;
    private javax.swing.JTextField jtfStock;
    // End of variables declaration//GEN-END:variables
}
